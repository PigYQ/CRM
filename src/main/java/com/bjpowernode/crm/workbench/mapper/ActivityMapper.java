package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.pojo.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Fri Sep 23 22:40:23 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Fri Sep 23 22:40:23 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Fri Sep 23 22:40:23 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Fri Sep 23 22:40:23 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Fri Sep 23 22:40:23 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存市场活动
     */
    int insertActivity(Activity record);

    /**
     * 根据条件分页查询市场活动
     */
    List<Activity> selectByConditionForPages(Map<String,Object> map);

    /**
     * 根据id查询市场活动（不需联表）
     */
    Activity selectActivityById(String id);

    /**
     * 根据条件查询市场活动条数
     */
    int selectActivityNums(Map<String,Object> map);

    /**
     * 根据id删除市场活动
     */
    int deleteByIds(String[] ids);

    /**
     * 更新市场活动
     */
    int updateActivityById(Activity activity);

    /**
     * 查询所有市场活动
     */
    List<Activity> selectAllActivity();

    /**
     * 根据id集查询市场活动
     */
    List<Activity> selectByIds(String[] ids);

    /**
     * 导入市场活动
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     * 根据id查询市场活动，需联表
     */
    Activity selectActivityDetailById(String id);

    /**
     * 根据线索id查询与之关联的市场活动
     */
    List<Activity> selectActivityByClueId(String clueId);

    /**
     * 根据线索id和市场活动名字查询未与之关联的市场活动
     */
    List<Activity> selectActivityByClueIdAndActivityName(Map<String,Object> map);

    /**
     * 根据线索id和市场活动名字查询已经与之关联的市场活动
     */
    List<Activity> selectHaveActivityByClueIdAndActivityName(Map<String,Object> map);
}